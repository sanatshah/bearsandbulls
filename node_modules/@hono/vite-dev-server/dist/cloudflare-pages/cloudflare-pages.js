const nullScript = "export default { fetch: () => new Response(null, { status: 404 }) };";
let mf = void 0;
const getEnv = (options) => async () => {
  if (!mf) {
    const { Miniflare } = await import("miniflare");
    mf = new Miniflare({
      modules: true,
      script: nullScript,
      ...options
    });
  }
  const env = {
    ...await mf.getBindings(),
    // `env.ASSETS.fetch()` function for Cloudflare Pages.
    ASSETS: {
      async fetch(input, init) {
        try {
          return await fetch(new Request(input, init));
        } catch (e) {
          console.error("Failed to execute ASSETS.fetch: ", e);
          return new Response(null, { status: 500 });
        }
      }
    }
  };
  return env;
};
const disposeMf = async () => {
  mf?.dispose();
  mf = void 0;
};
const plugin = (options) => {
  const env = getEnv(options ?? {});
  return {
    env,
    onServerClose: async () => {
      await disposeMf();
    }
  };
};
var cloudflare_pages_default = plugin;
export {
  cloudflare_pages_default as default,
  disposeMf,
  getEnv
};
