import { jsx as _jsx, jsxs as _jsxs } from "frog/jsx/jsx-runtime";
import { cross1Icon } from './icons.js';
export function AuthDialog() {
    return (_jsx("template", { "x-teleport": "body", children: _jsx("div", { class: "flex items-center justify-center p-6", style: {
                backgroundColor: 'rgba(0, 0, 0, 0.6)',
                position: 'fixed',
                inset: '0',
            }, "x-show": "open", "x-data": "{\n          code: undefined,\n          copied: false,\n          timedOut: false,\n          url: undefined,\n\n          async auth() {\n            this.timedOut = false\n            const data = await fetchAuthCode()\n            this.code = data.code\n            this.token = data.token\n            this.url = data.url\n\n            const timeout = 300_000\n            const interval = 1_500\n            const deadline = Date.now() + timeout\n\n            while (Date.now() < deadline) {\n              // Stop polling if dialog is closed\n              if (!this.open) return\n\n              const data = await fetchAuthStatus(token)\n              if (data.state === 'completed') {\n                const { state: _, ...rest } = data\n                user = rest\n                this.open = false\n                return\n              }\n\n              await new Promise((resolve) => setTimeout(resolve, interval))\n            }\n\n            this.timedOut = true\n          },\n        }", "x-effect": "\n          if (!open) return\n          auth()\n        ", children: _jsxs("div", { class: "bg-background-100 relative flex flex-col gap-4 scrollbars p-6 border-gray-alpha-100 border", style: { borderRadius: '1.5rem' }, '@click.outside': 'open = false',
                '@keyup.escape': 'open = false',
                'x-trap.noscroll': 'open', children: [_jsxs("button", { type: "button", class: "bg-transparent text-gray-800 hover:bg-gray-100 rounded-full flex items-center justify-center absolute", style: {
                            height: '2rem',
                            width: '2rem',
                            top: '1.25rem',
                            right: '1rem',
                        }, "x-on:click": "open = false", children: [_jsx("span", { class: "sr-only", children: "Close" }), cross1Icon] }), _jsx("h1", { class: "text-base font-bold text-gray-1000 text-center", children: "Scan with Phone" }), _jsx("p", { class: "text-sm text-gray-700 leading-snug text-center", style: { maxWidth: '17rem' }, children: "Scan with your phone's camera to sign in with your Farcaster account." }), _jsxs("div", { class: "relative", children: [_jsx("div", { "x-html": `code ?? '<div class="border border-gray-100" style="border-radius:1.5rem;height:276px;width:276px;" />'`, ':style': "timedOut && { opacity: '0.1' }" }), _jsxs("div", { role: "alert", "aria-live": "assertive", "aria-atomic": "true", class: "flex items-center justify-center flex-col gap-4 absolute", style: {
                                    inset: '0',
                                }, "x-show": "timedOut", children: [_jsx("div", { class: "font-medium text-gray-1000", children: "Code timed out" }), _jsx("button", { class: "bg-gray-1000 border border-gray-200 py-2 px-4 text-gray-100 font-medium text-sm rounded-md", type: "button", "x-on:click": "auth()", children: "Refresh" })] })] }), _jsx("button", { type: "button", class: "bg-gray-100 border border-gray-200 p-3 text-gray-1000 font-medium text-sm rounded-xl mt-1", "x-on:click": "\n              if (copied) return\n              navigator.clipboard.writeText(url)\n              copied = true\n              setTimeout(() => copied = false, 1_000)\n            ", "x-text": "copied ? 'Copied!' : 'Copy to Clipboard'", ':disabled': 'timedOut',
                        ':style': "timedOut && { opacity: '0.4' }" })] }) }) }));
}
//# sourceMappingURL=AuthDialog.js.map