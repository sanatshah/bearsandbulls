import { type FrameContext } from '../../types.js';
import { type Frame as FrameType, type RequestBody } from '../types.js';
import { Data } from './Data.js';
export type PreviewProps = {
    data: Data;
    routes: readonly string[];
};
type Data = {
    id: string;
    metrics: {
        speed: number;
    };
    response: {
        success: boolean;
        status: number;
        statusText: string;
        error?: string | undefined;
    };
    timestamp: number;
} & ({
    type: 'initial';
    method: 'get';
    context: FrameContext;
    frame: FrameType;
    metrics: {
        htmlSize: number;
        imageSize: number;
    };
    url: string;
} | {
    type: 'action';
    method: 'post';
    body: RequestBody;
    context: FrameContext;
    frame: FrameType;
    metrics: {
        htmlSize: number;
        imageSize: number;
    };
} | {
    type: 'redirect';
    method: 'post';
    body: RequestBody;
    response: {
        location?: string;
    };
});
export declare function Preview(props: PreviewProps): JSX.Element;
export {};
//# sourceMappingURL=Preview.d.ts.map